/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CapaDise√±o;

import CapaNegocio.CCita;
import CapaNegocio.CCliente;
import CapaNegocio.CHistorialClinico;
import CapaNegocio.CHora;
import CapaNegocio.CPrecio;
import CapaNegocio.Errores;
import Encapsulamiento.ECita;
import Encapsulamiento.ECliente;
import Encapsulamiento.EHistorial;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author vladimir
 */
public class Cliente extends javax.swing.JPanel {

    private final boolean Seleccionado = true;
    private final boolean DesSeleccionado = false;

    /**
     * Creates new form Clientes
     */
    public Cliente() {
        initComponents();
        CHora hora = new CHora();
        hora.start();

//        ImageIcon imgIcon = new ImageIcon(getClass().getResource("/Imagen/wallpaper.jpg"));
//        Image imgEscalada = imgIcon.getImage().getScaledInstance(lbImagen.getWidth(),
//                lbImagen.getHeight(), Image.SCALE_SMOOTH);
//        Icon iconoEscalado = new ImageIcon(imgEscalada);
//
//        lbImagen.setIcon(iconoEscalado);
        txtIdCliente.setVisible(
                false);
        jLabel11.setVisible(
                false);
        CCliente.Listar();

        txtDNI.addKeyListener(
                new KeyAdapter() {
                    @Override
                    public void keyTyped(KeyEvent e
                    ) {
                        char caracter = e.getKeyChar();

                        // Verificar si la tecla pulsada no es un digito
                        if (((caracter < '0')
                        || (caracter > '9'))
                        && (caracter != '\b' /*corresponde a BACK_SPACE*/)) {
                            e.consume();  // ignorar el evento de teclado
                        }
                    }
                }
        );

        txtEdad.addKeyListener(
                new KeyAdapter() {
                    @Override
                    public void keyTyped(KeyEvent e
                    ) {
                        char caracter = e.getKeyChar();

                        // Verificar si la tecla pulsada no es un digito
                        if (((caracter < '0')
                        || (caracter > '9'))
                        && (caracter != '\b' /*corresponde a BACK_SPACE*/)) {
                            e.consume();  // ignorar el evento de teclado
                        }
                    }
                }
        );

        txtTelefono.addKeyListener(
                new KeyAdapter() {
                    @Override
                    public void keyTyped(KeyEvent e
                    ) {
                        char caracter = e.getKeyChar();

                        // Verificar si la tecla pulsada no es un digito
                        if (((caracter < '0')
                        || (caracter > '9'))
                        && (caracter != '\b' /*corresponde a BACK_SPACE*/)) {
                            e.consume();  // ignorar el evento de teclado
                        }
                    }
                }
        );

        //lbFecha.setText(String.valueOf(txtFecha.getCalendar().get(Calendar.DATE)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBusqueda = new javax.swing.JPanel();
        rbApellido = new javax.swing.JRadioButton();
        rbNombre = new javax.swing.JRadioButton();
        rbAM = new javax.swing.JRadioButton();
        txtBApellido = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        txtBNombre = new javax.swing.JTextField();
        txtBAM = new javax.swing.JTextField();
        panelOperacionCLiente = new javax.swing.JPanel();
        btnNuevoCliente = new javax.swing.JButton();
        btnModificarCliente = new javax.swing.JButton();
        btnliminarCliente = new javax.swing.JButton();
        btnCrearHistorialClinico = new javax.swing.JButton();
        btnEliminarHistorial = new javax.swing.JButton();
        panelHora = new javax.swing.JPanel();
        lbHora = new javax.swing.JLabel();
        panelListarCliente = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListaCliente = new javax.swing.JTable();
        panelDatosCLiente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtApellidoPaterno = new javax.swing.JTextField();
        txtApellidoMaterno = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        txtDNI = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtParentesco = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cbNroHistorial = new javax.swing.JComboBox();
        btnHistorialClinico = new javax.swing.JButton();
        txtFecha = new com.toedter.calendar.JDateChooser();
        txtIdCliente = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        panelFecha = new javax.swing.JPanel();
        lbFecha = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1019, 667));
        setLayout(null);

        panelBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(153, 255, 255), null), null), "Busqueda", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 10), new java.awt.Color(0, 102, 102))); // NOI18N
        panelBusqueda.setOpaque(false);

        rbApellido.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rbApellido.setText("Apellido paterno");
        rbApellido.setOpaque(false);
        rbApellido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbApellidoMouseClicked(evt);
            }
        });

        rbNombre.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rbNombre.setText("Nombre");
        rbNombre.setOpaque(false);
        rbNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbNombreMouseClicked(evt);
            }
        });

        rbAM.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rbAM.setText("Apellido materno");
        rbAM.setOpaque(false);
        rbAM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbAMMouseClicked(evt);
            }
        });

        txtBApellido.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtBApellido.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));

        btnBuscar.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/busqueda.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
        });

        txtBNombre.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtBNombre.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));

        txtBAM.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtBAM.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));

        javax.swing.GroupLayout panelBusquedaLayout = new javax.swing.GroupLayout(panelBusqueda);
        panelBusqueda.setLayout(panelBusquedaLayout);
        panelBusquedaLayout.setHorizontalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaLayout.createSequentialGroup()
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBusquedaLayout.createSequentialGroup()
                        .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbAM)
                            .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(rbNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rbApellido)))
                        .addGap(18, 18, 18)
                        .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBAM, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtBApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtBNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelBusquedaLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(btnBuscar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBusquedaLayout.setVerticalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbApellido)
                    .addComponent(txtBApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbNombre)
                    .addComponent(txtBNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbAM)
                    .addComponent(txtBAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnBuscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(panelBusqueda);
        panelBusqueda.setBounds(10, 0, 260, 192);

        panelOperacionCLiente.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 255, 255), null), null), "Funcion Sobre El Cliente", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 10), new java.awt.Color(0, 102, 102))); // NOI18N
        panelOperacionCLiente.setOpaque(false);

        btnNuevoCliente.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnNuevoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/clientes.png"))); // NOI18N
        btnNuevoCliente.setText(" Nuevo paciente");
        btnNuevoCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNuevoClienteMouseClicked(evt);
            }
        });

        btnModificarCliente.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnModificarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/clientesModificado.png"))); // NOI18N
        btnModificarCliente.setText("Modificar paciente");
        btnModificarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarClienteMouseClicked(evt);
            }
        });

        btnliminarCliente.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnliminarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/eliminarCliente.png"))); // NOI18N
        btnliminarCliente.setText("Eliminar paciente");
        btnliminarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnliminarClienteMouseClicked(evt);
            }
        });

        btnCrearHistorialClinico.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnCrearHistorialClinico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/crearHistorial.png"))); // NOI18N
        btnCrearHistorialClinico.setText("Crear Historial Clinico ");
        btnCrearHistorialClinico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCrearHistorialClinicoMouseClicked(evt);
            }
        });

        btnEliminarHistorial.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnEliminarHistorial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/historialsEdit.png"))); // NOI18N
        btnEliminarHistorial.setText("Eliminar Historial Clinico");
        btnEliminarHistorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarHistorialMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelOperacionCLienteLayout = new javax.swing.GroupLayout(panelOperacionCLiente);
        panelOperacionCLiente.setLayout(panelOperacionCLienteLayout);
        panelOperacionCLienteLayout.setHorizontalGroup(
            panelOperacionCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOperacionCLienteLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panelOperacionCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEliminarHistorial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCrearHistorialClinico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnliminarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModificarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNuevoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        panelOperacionCLienteLayout.setVerticalGroup(
            panelOperacionCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOperacionCLienteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNuevoCliente)
                .addGap(18, 18, 18)
                .addComponent(btnModificarCliente)
                .addGap(18, 18, 18)
                .addComponent(btnliminarCliente)
                .addGap(19, 19, 19)
                .addComponent(btnCrearHistorialClinico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminarHistorial)
                .addGap(43, 43, 43))
        );

        add(panelOperacionCLiente);
        panelOperacionCLiente.setBounds(10, 225, 260, 280);

        panelHora.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(153, 255, 255), null), null), "Hora Actual ", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 10), new java.awt.Color(0, 102, 102))); // NOI18N
        panelHora.setForeground(new java.awt.Color(0, 102, 102));
        panelHora.setOpaque(false);
        panelHora.setPreferredSize(new java.awt.Dimension(268, 110));

        lbHora.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lbHora.setForeground(new java.awt.Color(153, 0, 0));
        lbHora.setToolTipText("");

        javax.swing.GroupLayout panelHoraLayout = new javax.swing.GroupLayout(panelHora);
        panelHora.setLayout(panelHoraLayout);
        panelHoraLayout.setHorizontalGroup(
            panelHoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHoraLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(lbHora, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        panelHoraLayout.setVerticalGroup(
            panelHoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHoraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbHora, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(panelHora);
        panelHora.setBounds(10, 546, 260, 110);

        panelListarCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(153, 255, 255), null), null), "Lista Clientes", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 10), new java.awt.Color(0, 102, 102))); // NOI18N
        panelListarCliente.setOpaque(false);

        tblListaCliente.setBackground(new java.awt.Color(255, 153, 51));
        tblListaCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblListaCliente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tblListaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblListaCliente.setAutoscrolls(false);
        tblListaCliente.setGridColor(new java.awt.Color(255, 255, 255));
        tblListaCliente.setInheritsPopupMenu(true);
        tblListaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListaClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblListaCliente);

        javax.swing.GroupLayout panelListarClienteLayout = new javax.swing.GroupLayout(panelListarCliente);
        panelListarCliente.setLayout(panelListarClienteLayout);
        panelListarClienteLayout.setHorizontalGroup(
            panelListarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
        );
        panelListarClienteLayout.setVerticalGroup(
            panelListarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
        );

        add(panelListarCliente);
        panelListarCliente.setBounds(280, 0, 420, 510);

        panelDatosCLiente.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(153, 255, 255), null), "Datos del Cliente", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 10), new java.awt.Color(0, 102, 102))); // NOI18N
        panelDatosCLiente.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Apellido paterno:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("Apellido materno:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("Nombre:");

        txtApellidoPaterno.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtApellidoPaterno.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));
        txtApellidoPaterno.setMaximumSize(new java.awt.Dimension(120, 20));
        txtApellidoPaterno.setMinimumSize(new java.awt.Dimension(120, 20));
        txtApellidoPaterno.setPreferredSize(new java.awt.Dimension(120, 20));

        txtApellidoMaterno.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtApellidoMaterno.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));
        txtApellidoMaterno.setMaximumSize(new java.awt.Dimension(120, 20));
        txtApellidoMaterno.setMinimumSize(new java.awt.Dimension(120, 20));
        txtApellidoMaterno.setPreferredSize(new java.awt.Dimension(120, 20));

        txtNombre.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtNombre.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));
        txtNombre.setMaximumSize(new java.awt.Dimension(120, 20));
        txtNombre.setMinimumSize(new java.awt.Dimension(120, 20));
        txtNombre.setPreferredSize(new java.awt.Dimension(120, 20));

        txtDireccion.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtDireccion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));
        txtDireccion.setMaximumSize(new java.awt.Dimension(171, 20));
        txtDireccion.setMinimumSize(new java.awt.Dimension(171, 20));
        txtDireccion.setPreferredSize(new java.awt.Dimension(171, 20));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel4.setText("Direccion:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel5.setText("Telefono o celular:");

        txtTelefono.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtTelefono.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));
        txtTelefono.setMaximumSize(new java.awt.Dimension(80, 20));
        txtTelefono.setMinimumSize(new java.awt.Dimension(80, 20));
        txtTelefono.setPreferredSize(new java.awt.Dimension(80, 20));

        txtDNI.setEditable(false);
        txtDNI.setBackground(java.awt.SystemColor.window);
        txtDNI.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtDNI.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));
        txtDNI.setMaximumSize(new java.awt.Dimension(70, 20));
        txtDNI.setMinimumSize(new java.awt.Dimension(70, 20));
        txtDNI.setName(""); // NOI18N
        txtDNI.setPreferredSize(new java.awt.Dimension(70, 20));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("DNI:");

        txtParentesco.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtParentesco.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));
        txtParentesco.setMaximumSize(new java.awt.Dimension(130, 20));
        txtParentesco.setMinimumSize(new java.awt.Dimension(130, 20));
        txtParentesco.setPreferredSize(new java.awt.Dimension(130, 20));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel7.setText("Parentesco:");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel8.setText("Fecha de nacimiento:");

        txtEdad.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtEdad.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));
        txtEdad.setMaximumSize(new java.awt.Dimension(20, 20));
        txtEdad.setMinimumSize(new java.awt.Dimension(20, 20));
        txtEdad.setPreferredSize(new java.awt.Dimension(20, 20));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel9.setText("Edad:");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel10.setText("N¬∞ Historial Clinico:");

        cbNroHistorial.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cbNroHistorial.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 0, 0), null), javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 0, 0), null)));

        btnHistorialClinico.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        btnHistorialClinico.setForeground(new java.awt.Color(153, 0, 0));
        btnHistorialClinico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/historials.png"))); // NOI18N
        btnHistorialClinico.setText("Ingresar a Historial Clinico");
        btnHistorialClinico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHistorialClinicoMouseClicked(evt);
            }
        });

        txtFecha.setBackground(new java.awt.Color(204, 204, 255));
        txtFecha.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));
        txtFecha.setDateFormatString("dd-MM-yyyy");
        txtFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaKeyPressed(evt);
            }
        });

        txtIdCliente.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtIdCliente.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 1, true));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel11.setText("Id Cliente:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel12.setText("(dia-mes-a√±o)");

        javax.swing.GroupLayout panelDatosCLienteLayout = new javax.swing.GroupLayout(panelDatosCLiente);
        panelDatosCLiente.setLayout(panelDatosCLienteLayout);
        panelDatosCLienteLayout.setHorizontalGroup(
            panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                        .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(21, 21, 21)
                                .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbNroHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtParentesco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosCLienteLayout.createSequentialGroup()
                                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnHistorialClinico)
                                    .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosCLienteLayout.createSequentialGroup()
                                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9)))
                                .addGap(18, 18, 18)
                                .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(43, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosCLienteLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(70, 70, 70))))
        );
        panelDatosCLienteLayout.setVerticalGroup(
            panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosCLienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtParentesco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(panelDatosCLienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbNroHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(btnHistorialClinico)
                .addGap(32, 32, 32))
        );

        add(panelDatosCLiente);
        panelDatosCLiente.setBounds(710, 0, 300, 510);

        panelFecha.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(153, 255, 255), null), null), "Fecha Actual", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 10), new java.awt.Color(0, 102, 102))); // NOI18N
        panelFecha.setForeground(new java.awt.Color(0, 102, 102));
        panelFecha.setOpaque(false);
        panelFecha.setPreferredSize(new java.awt.Dimension(303, 110));

        lbFecha.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lbFecha.setForeground(new java.awt.Color(153, 0, 0));
        lbFecha.setToolTipText("");

        javax.swing.GroupLayout panelFechaLayout = new javax.swing.GroupLayout(panelFecha);
        panelFecha.setLayout(panelFechaLayout);
        panelFechaLayout.setHorizontalGroup(
            panelFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFechaLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(lbFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        panelFechaLayout.setVerticalGroup(
            panelFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFechaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(panelFecha);
        panelFecha.setBounds(719, 546, 290, 110);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoClienteMouseClicked

        LimpiarControles();
        NuevoCliente cliente = new NuevoCliente();
        cliente.setVisible(true);
    }//GEN-LAST:event_btnNuevoClienteMouseClicked
    public void LimpiarControles() {
        txtApellidoPaterno.setText("");
        txtApellidoMaterno.setText("");
        txtNombre.setText("");
        txtDNI.setText("");
        txtTelefono.setText("");
        txtEdad.setText("");
        txtFecha.setDate(null);
        txtDireccion.setText("");
        txtParentesco.setText("");
    }
    private void tblListaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaClienteMouseClicked
        try {
            String Fecha = "";
            ResultSet rs = null;
            SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");
            int fila = tblListaCliente.getSelectedRow();
            int IdCliente = Integer.parseInt(tblListaCliente.getValueAt(fila, 4).toString());
            rs = CCliente.Copiar_a_Formularios(IdCliente);
            while (rs.next()) {
                txtApellidoPaterno.setText(rs.getString(1));
                txtApellidoMaterno.setText(rs.getString(2));
                txtNombre.setText(rs.getString(3));
                txtDNI.setText(rs.getString(4));
                txtTelefono.setText(rs.getString(5));
                txtEdad.setText(String.valueOf(rs.getInt(6)));
                Date dateValue;
                try {

                    Fecha = rs.getDate(7).toString();
                    if (Fecha.equals("")) {
                        dateValue = date.parse(Errores.FormatoFecha("0001-01-01"));
                    } else {
                        dateValue = date.parse(Errores.FormatoFecha(Fecha));
                    }
                    txtFecha.setDate(dateValue);

                } catch (SQLException | ParseException ex) {
                    Logger.getLogger(Cliente.class
                            .getName()).log(Level.SEVERE, null, ex);
                }

                txtDireccion.setText(rs.getString(8));
                txtParentesco.setText(rs.getString(9));
                txtIdCliente.setText(String.valueOf(IdCliente));
                break;
            }

            //**************************************************************************
            String NroH = "";
            rs = CCliente.Copiar_a_ComboBox();
            while (rs.next()) {
                NroH = NroH + rs.getString(1) + "-";
            }
            String[] NroHistoriales = NroH.split("-");
            cbNroHistorial.setModel(new javax.swing.DefaultComboBoxModel(NroHistoriales));

        } catch (SQLException ex) {
            Logger.getLogger(Cliente.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblListaClienteMouseClicked

    @SuppressWarnings("empty-statement")
    private void btnModificarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarClienteMouseClicked
        int seleccion1 = JOptionPane.showOptionDialog(null, "¬øseguro decea actualizar?"/*componente padre*/, //Mensaje
                "Seleccione una opci√≥n", // T√≠tulo
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, // null para icono por defecto.
                new Object[]{"Si", "No"}, // null para YES, NO y CANCEL
                "Si");
        if (seleccion1 != -1) {
            if ((seleccion1 + 1) == 1) {
                try {
                    if (txtApellidoPaterno.getText().equals("") || txtApellidoMaterno.getText().equals("")
                            || txtNombre.getText().equals("") || txtDNI.getText().equals("")) {
                        Errores.Error("Los campos en rojo son obligatorios");
                        txtApellidoPaterno.setFocusable(true);
                    } else {
                        ECliente.setApellidoPaterno(txtApellidoPaterno.getText());
                        ECliente.setApellidoMaterno(txtApellidoMaterno.getText());
                        ECliente.setNombre(txtNombre.getText());
                        if (txtDNI.getText().length() == 8) {
                            ECliente.setDNI(txtDNI.getText());
                            if (txtTelefono.getText().equals("")) {
                                ECliente.setTelefono("0");
                            } else {
                                ECliente.setTelefono(txtTelefono.getText());
                            }
                            if (txtEdad.getText().equals("")) {
                                ECliente.setEdad("0");
                            } else {
                                ECliente.setEdad(txtEdad.getText());
                            }
                            if (txtFecha.getCalendar() == null) {
                                ECliente.setFechaNacimiento("0001-01-01");
                            } else {
                                ECliente.setFechaNacimiento(Errores.FormatoFecha(String.valueOf(txtFecha.getCalendar().get(Calendar.DAY_OF_MONTH) + "-"
                                        + (txtFecha.getCalendar().get(Calendar.MONTH) + 1) + "-"
                                        + txtFecha.getCalendar().get(Calendar.YEAR))));
                            }

                            ECliente.setDireccion(txtDireccion.getText());
                            ECliente.setParentesco(txtParentesco.getText());
                            ECliente.setIdCliente(Integer.parseInt(txtIdCliente.getText()));
                            if (CCliente.Actualizar()) {
                                LimpiarControles();
                                Errores.Exito("Datos correctamente actualizados");
                                CCliente.Listar();
                                String[] Fecha = Cliente.lbFecha.getText().split("-");
                                ECita.setFecha(Fecha[2] + "-" + Fecha[1]);
                                CCita.Listar_Por_Fecha();
                            } else {
                                Errores.Error("Algunos datos no fueron actualizados");
                            }
                        } else {
                            Errores.Error("El DNI es incorrecto");
                        }

                    }

                } catch (Exception e) {
                    System.out.println(e);
                }
            }

        }

    }//GEN-LAST:event_btnModificarClienteMouseClicked

    private void btnliminarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnliminarClienteMouseClicked

        int seleccion1 = JOptionPane.showOptionDialog(null, "¬øseguro decea eliminar el paciente?"/*componente padre*/, //Mensaje
                "Seleccione una opci√≥n", // T√≠tulo
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, // null para icono por defecto.
                new Object[]{"Si", "No"}, // null para YES, NO y CANCEL
                "Si");
        if (seleccion1 != -1) {
            if ((seleccion1 + 1) == 1) {
                if (txtApellidoPaterno.getText().equals("") || txtApellidoMaterno.getText().equals("")
                        || txtNombre.getText().equals("") || txtDNI.getText().equals("")) {
                    Errores.Error("Los campos en rojo son obligatorios");
                    txtApellidoPaterno.setFocusable(true);
                } else {
                    ECliente.setIdCliente(Integer.parseInt(txtIdCliente.getText()));
                    if (CCliente.Eliminar()) {
                        LimpiarControles();
                        CCliente.Listar();
                        String[] Fecha = Cliente.lbFecha.getText().split("-");
                        ECita.setFecha(Fecha[2] + "-" + Fecha[1]);
                        CCita.Listar_Por_Fecha();
                        Ingreso.Actualizar();
                        EgresosvsIngresos.EgresosVsIngresosActualizar();
                        Errores.Exito("El paciente se elimino correctamente del sistema");

                    } else {
                        Errores.Error("No se puede eliminar el paciente");
                    }
                }
            }
        }
    }//GEN-LAST:event_btnliminarClienteMouseClicked

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        int Id = ECliente.getIdDoctor();
        if (rbApellido.isSelected() == true) {
            rbAM.setSelected(false);
            rbNombre.setSelected(false);
            CCliente.Buscar(0, Id, txtBApellido.getText());
        }
        if (rbAM.isSelected() == true) {
            rbApellido.setSelected(false);
            rbNombre.setSelected(false);
            CCliente.Buscar(1, Id, txtBAM.getText());
        }
        if (rbNombre.isSelected() == true) {
            rbAM.setSelected(false);
            rbApellido.setSelected(false);
            CCliente.Buscar(2, Id, txtBNombre.getText());
        }
    }//GEN-LAST:event_btnBuscarMouseClicked

    private void btnCrearHistorialClinicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearHistorialClinicoMouseClicked
        if (txtApellidoPaterno.getText().equals("") || txtApellidoMaterno.getText().equals("")
                || txtNombre.getText().equals("") || txtDNI.getText().equals("")) {
            Errores.Error("Los campos en rojo son obligatorios");
            txtApellidoPaterno.setFocusable(true);
        } else {
            CrearHistorial c = new CrearHistorial();
            c.setLocationRelativeTo(null);
            c.setVisible(true);
            LimpiarControles();
        }
    }//GEN-LAST:event_btnCrearHistorialClinicoMouseClicked

    private void btnHistorialClinicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHistorialClinicoMouseClicked
        if (txtApellidoPaterno.getText().equals("") || txtApellidoMaterno.getText().equals("")
                || txtNombre.getText().equals("") || txtDNI.getText().equals("")) {
            Errores.Error("Los campos en rojo son obligatorios");
            txtApellidoPaterno.setFocusable(true);
        } else {
            try {
                String Id = "";
                Tratamientos t = new Tratamientos();
                ResultSet rs = null;
                Tratamientos.lbNombre.setText(txtNombre.getText() + " - " + txtApellidoPaterno.getText() + " - " + txtApellidoMaterno.getText());
                Tratamientos.lbNroHistorial.setText(cbNroHistorial.getSelectedItem().toString());
                Tratamientos.txtIdCliente.setText(txtIdCliente.getText());
                Tratamientos.txtIdCliente.setVisible(false);
                Tratamientos.txtIdCrearH.setVisible(false);
                rs = CHistorialClinico.Recuperar_Id_Creacion_Historial();
                while (rs.next()) {
                    Id = rs.getString(1);
                    Tratamientos.txtIdCrearH.setText(Id);
                    Tratamientos.lbFechaH.setText(Errores.FormatoFecha(rs.getString(2)));
                    Tratamientos.lbMotivo.setText(rs.getString(3));

                }
                Mostrar();

                //recupramos el precio del cliente con sus respectivos precios
                ResultSet rs1 = CHistorialClinico.ListarTramiento(Integer.parseInt(Id));
                EHistorial.RecuperarPreciosCliente(rs1);
                //fin de recuperacion de precios

                t.setLocationRelativeTo(null);
                t.setVisible(true);
                LimpiarControles();
            } catch (Exception ex) {
                Errores.Error("Sin historial clinico");
            }
        }
    }//GEN-LAST:event_btnHistorialClinicoMouseClicked
    public void Mostrar() {
        try {
            ResultSet rs = CPrecio.Mostrar();
            while (rs.next()) {
                PanelLimpieza.txtPrecioNormal1.setText(rs.getString(1));
                PanelLimpieza.txtPrecioNormal2.setText(rs.getString(2));
                PanelLimpieza.txtPrecioNormal3.setText(rs.getString(3));
                PanelLimpieza.txtPrecioNormal4.setText(rs.getString(4));
                PanelLimpieza.txtPrecioNormal5.setText(rs.getString(5));
                PanelLimpieza.txtPrecioNormal6.setText(rs.getString(6));
                PanelLimpieza.txtPrecioNormal7.setText(rs.getString(7));
                PanelEndodoncia.txtPrecioNormal1.setText(rs.getString(8));
                PanelEndodoncia.txtPrecioNormal2.setText(rs.getString(9));
                PanelEndodoncia.txtPrecioNormal3.setText(rs.getString(10));
                PanelEndodoncia.txtPrecioNormal4.setText(rs.getString(11));
                PanelEndodoncia.txtPrecioNormal5.setText(rs.getString(12));
                PanelEndodoncia.txtPrecioNormal6.setText(rs.getString(13));
                PanelEndodoncia.txtPrecioNormal7.setText(rs.getString(14));
                PanelEndodoncia.txtPrecioNormal8.setText(rs.getString(15));
                PanelEndodoncia.txtPrecioNormal9.setText(rs.getString(16));
                PanelEndodoncia.txtPrecioNormal10.setText(rs.getString(17));
                PanelEndodoncia.txtPrecioNormal11.setText(rs.getString(18));
                PanelExodoncia.txtPrecioNormal1.setText(rs.getString(19));
                PanelExodoncia.txtPrecioNormal2.setText(rs.getString(20));
                PanelExodoncia.txtPrecioNormal3.setText(rs.getString(21));
                PanelExodoncia.txtPrecioNormal4.setText(rs.getString(22));
                PanelExodoncia.txtPrecioNormal10.setText(rs.getString(23));
                PanelExodoncia.txtPrecioNormal11.setText(rs.getString(24));
                PanelExodoncia.txtPrecioNormal5.setText(rs.getString(25));
                PanelExodoncia.txtPrecioNormal6.setText(rs.getString(26));
                PanelExodoncia.txtPrecioNormal7.setText(rs.getString(27));
                PanelExodoncia.txtPrecioNormal8.setText(rs.getString(28));
                PanelExodoncia.txtPrecioNormal9.setText(rs.getString(29));
                PanelExodoncia.txtPrecioNormal12.setText(rs.getString(30));
                PanelExodoncia.txtPrecioNormal13.setText(rs.getString(31));
                PanelExodoncia.txtPrecioNormal14.setText(rs.getString(32));

            }
        } catch (SQLException ex) {
            Logger.getLogger(Precios.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }


    private void btnEliminarHistorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarHistorialMouseClicked
        int seleccion1 = JOptionPane.showOptionDialog(null, "¬øseguro decea eliminar el historial clinico seleccionado?"/*componente padre*/, //Mensaje
                "Seleccione una opci√≥n", // T√≠tulo
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, // null para icono por defecto.
                new Object[]{"Si", "No"}, // null para YES, NO y CANCEL
                "Si");
        if (seleccion1 != -1) {
            if ((seleccion1 + 1) == 1) {
                if (txtApellidoPaterno.getText().equals("") || txtApellidoMaterno.getText().equals("")
                        || txtNombre.getText().equals("") || txtDNI.getText().equals("")) {
                    Errores.Error("Los campos en rojo son obligatorios");
                    txtApellidoPaterno.setFocusable(true);
                } else {
                    if (CHistorialClinico.EliminarHistorial()) {
                        CCliente.Listar();
                        Ingreso.Actualizar();
                        EgresosvsIngresos.EgresosVsIngresosActualizar();
                        Errores.Exito("Se a eliminado el historial clinico seleccionado");
                    } else {
                        Errores.Error("No se a podido eliminar el Historial clinico del paciente");
                    }
                }
            }
        }
    }//GEN-LAST:event_btnEliminarHistorialMouseClicked

    private void txtFechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyPressed
        char caracter = evt.getKeyChar();

        // Verificar si la tecla pulsada no es un digito
        if (((caracter < '0')
                || (caracter > '9'))
                && (caracter != '\b' /*corresponde a BACK_SPACE*/)) {
            if (caracter != '-') {
                evt.consume();  // ignorar el evento de teclado
            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaKeyPressed

    private void rbApellidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbApellidoMouseClicked
        rbApellido.setSelected(Seleccionado);
        rbNombre.setSelected(DesSeleccionado);
        rbAM.setSelected(DesSeleccionado);
    }//GEN-LAST:event_rbApellidoMouseClicked

    private void rbNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbNombreMouseClicked
        rbApellido.setSelected(DesSeleccionado);
        rbNombre.setSelected(Seleccionado);
        rbAM.setSelected(DesSeleccionado);
    }//GEN-LAST:event_rbNombreMouseClicked

    private void rbAMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbAMMouseClicked
        rbApellido.setSelected(DesSeleccionado);
        rbNombre.setSelected(DesSeleccionado);
        rbAM.setSelected(Seleccionado);
    }//GEN-LAST:event_rbAMMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnBuscar;
    public static javax.swing.JButton btnCrearHistorialClinico;
    public static javax.swing.JButton btnEliminarHistorial;
    public static javax.swing.JButton btnHistorialClinico;
    public static javax.swing.JButton btnModificarCliente;
    public static javax.swing.JButton btnNuevoCliente;
    public static javax.swing.JButton btnliminarCliente;
    public static javax.swing.JComboBox cbNroHistorial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JLabel lbFecha;
    public static javax.swing.JLabel lbHora;
    private javax.swing.JPanel panelBusqueda;
    public static javax.swing.JPanel panelDatosCLiente;
    public static javax.swing.JPanel panelFecha;
    public static javax.swing.JPanel panelHora;
    public static javax.swing.JPanel panelListarCliente;
    public static javax.swing.JPanel panelOperacionCLiente;
    public static javax.swing.JRadioButton rbAM;
    public static javax.swing.JRadioButton rbApellido;
    public static javax.swing.JRadioButton rbNombre;
    public static javax.swing.JTable tblListaCliente;
    public static javax.swing.JTextField txtApellidoMaterno;
    public static javax.swing.JTextField txtApellidoPaterno;
    public static javax.swing.JTextField txtBAM;
    public static javax.swing.JTextField txtBApellido;
    public static javax.swing.JTextField txtBNombre;
    public static javax.swing.JTextField txtDNI;
    public static javax.swing.JTextField txtDireccion;
    public static javax.swing.JTextField txtEdad;
    public static com.toedter.calendar.JDateChooser txtFecha;
    public static javax.swing.JTextField txtIdCliente;
    public static javax.swing.JTextField txtNombre;
    public static javax.swing.JTextField txtParentesco;
    public static javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
